---
// Base layout component for Astro pages, including global styles, header, and footer.
import '../styles/global.css';
import Header from '../components/Header';
import Footer from '../components/footer.tsx';
import { Toaster } from '@/components/ui/toaster';

// Import locale files
import en from '../locales/en.json';
import es from '../locales/es.json';
import ht from '../locales/ht.json';

const locales = { en, es, ht };

interface Props {
  title: string;
  description?: string;
  ogImageUrl?: string;
  ogImageWidth?: number; // New prop
  ogImageHeight?: number; // New prop
  ogUrl?: string;
  ogType?: string;
}

const { 
  title, 
  description = "mango.tc news - Your source for news from Turks and Caicos.", 
  ogImageUrl,
  ogImageWidth, // Destructure new prop
  ogImageHeight, // Destructure new prop
  ogUrl = Astro.url.href,
  ogType = "website"
} = Astro.props;

// Get current locale from Astro
const currentLocale = Astro.currentLocale || 'en';
const t = locales[currentLocale as keyof typeof locales]; // Type assertion for safety

// Determine dynamic title and description for meta tags
const dynamicTitle = title.startsWith('mango.tc news - ') ? title : `mango.tc news - ${title}`;
const dynamicDescription = description === "mango.tc news - Your source for news from Turks and Caicos." ? t.news : description;

---

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>

<!doctype html>
<html lang={currentLocale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={dynamicDescription} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)">
    <meta name="theme-color" content="#000000" media="(prefers-color-scheme: dark)">
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <meta name="google-adsense-account" content="ca-pub-7180813918214554">
    <title>mango.tc news - {title}</title>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7180813918214554"
     crossorigin="anonymous"></script>
    <!-- Open Graph Meta Tags for Social Sharing -->
    <meta property="og:title" content={dynamicTitle} />
    <meta property="og:description" content={dynamicDescription} />
    <meta property="og:type" content={ogType} />
    <meta property="og:url" content={ogUrl} />
    {ogImageUrl && <meta property="og:image" content={ogImageUrl} />}
    {ogImageWidth && <meta property="og:image:width" content={String(ogImageWidth)} />}
    {ogImageHeight && <meta property="og:image:height" content={String(ogImageHeight)} />}
    <meta property="og:site_name" content="mango.tc news" />
    {/* Twitter Card Meta Tags */}
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={dynamicTitle} />
    <meta name="twitter:description" content={dynamicDescription} />
    {ogImageUrl && <meta name="twitter:image" content={ogImageUrl} />}
    {ogImageWidth && <meta name="twitter:image:width" content={String(ogImageWidth)} />}
    {ogImageHeight && <meta name="twitter:image:height" content={String(ogImageHeight)} />}
  </head>
  <body>
    <Header client:load />
    <slot />
    <Footer client:load />
    <Toaster client:load />
  </body>
</html>
